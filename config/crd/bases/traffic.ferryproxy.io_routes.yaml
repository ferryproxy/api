---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: routes.traffic.ferryproxy.io
spec:
  group: traffic.ferryproxy.io
  names:
    kind: Route
    listKind: RouteList
    plural: routes
    singular: route
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.export
      name: export
      type: string
    - jsonPath: .status.way
      name: way
      type: string
    - jsonPath: .status.import
      name: import
      type: string
    - jsonPath: .status.phase
      name: status
      type: string
    - jsonPath: .status.lastSynchronizationTimestamp
      name: last-synchronization
      type: date
    - jsonPath: .metadata.creationTimestamp
      name: age
      type: date
    name: v1alpha2
    schema:
      openAPIV3Schema:
        description: Route is the Schema for the routes API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: RouteSpec defines the desired state of Route
            properties:
              export:
                description: Export is one of export of the Route
                properties:
                  hubName:
                    description: HubName is specifies the name of the Hub
                    type: string
                  service:
                    description: Service is the service
                    properties:
                      name:
                        description: Name is the service name
                        type: string
                      namespace:
                        description: Namespace is the service namespace
                        type: string
                    required:
                    - name
                    - namespace
                    type: object
                required:
                - hubName
                - service
                type: object
              import:
                description: Import is one of import of the Route
                properties:
                  hubName:
                    description: HubName is specifies the name of the Hub
                    type: string
                  service:
                    description: Service is the service
                    properties:
                      name:
                        description: Name is the service name
                        type: string
                      namespace:
                        description: Namespace is the service namespace
                        type: string
                    required:
                    - name
                    - namespace
                    type: object
                required:
                - hubName
                - service
                type: object
            required:
            - export
            - import
            type: object
          status:
            description: RouteStatus defines the observed state of Route
            properties:
              conditions:
                description: Conditions current service state
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    type FooStatus struct{ // Represents the observations of a foo's
                    current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              export:
                description: Export is describe of the export
                type: string
              import:
                description: Import is describe of the import
                type: string
              lastSynchronizationTimestamp:
                description: LastSynchronizationTimestamp is the last time synchronization
                format: date-time
                type: string
              phase:
                description: Phase is the phase of the Route
                type: string
              way:
                description: Way is describe of the way
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
